---
import "../styles/global.css"

import Emblem from '../svg/logo-emblem.svg'
---
<!-- MOBILE -->
<header class="headerMobile absolute can-animate is-fixed scroll-up md:hidden flex flex-col  gap-8 pb-padding-header-y pt-padding-header-y w-full"> 
 <a href="/" class="self-center"> <img src={Emblem} alt="Logo Emblem" class="self-center w-10"></a>
  <nav class="px-body-x">
      <ul class="flex justify-between">
          <li><a href="/about/" class="navLinks hover-underline-animation">About</a></li>
          <li><a href="/rental/" class="navLinks hover-underline-animation">Rental</a></li>
          <li><a href="/collections/" class="navLinks hover-underline-animation">Collections</a></li>
          <li><a id="cartMobile" class="navLinks hover-underline-animation cursor-pointer">Cart<span id="item" class="hide">(1)</span></a></li>
      </ul>
  </nav>
  </header>

<!-- DESKTOP -->
<header class="hidden md:block pb-padding-header-y sticky top-padding-header-y"> 
<nav class=" px-body-x">
    <ul class="flex justify-between">
        <li><a href="/about/" class="navLinks hover-underline-animation">About</a></li>
        <li><a href="/rental/" class="navLinks hover-underline-animation">Rental</a></li>
        <li><a href="/"><img src={Emblem} alt="EmblemLogo" class="w-14"></a></li>
        <li><a href="/collections/" class="navLinks hover-underline-animation">Collections</a></li>
        <li><a id="cartDesktop" class="navLinks hover-underline-animation cursor-pointer">Cart<span id="item2" class="hide">(1)</span> </a></li>
    </ul>
</nav>
</header>


<style>

header{
        filter: invert(1);
        mix-blend-mode: difference;
      }

      a.navLinks{
        font-family: var(--font-family-accent);
        font-weight: var(--font-weight-book);
        font-size: var(--font-size-body-btn);
      }

    .hide{
      display: none;
    }


  /* Header animation */
  .can-animate {
    transition: transform 0.3s ease, visibility 0s 0.3s linear;
  }
  .is-fixed {
    position: fixed !important;
    transform: translate3d(0, -100%, 0);
  }
  .scroll-up {
    transform: translate3d(0, 0, 0);
  }


</style>

<script is:inline>
  const header = document.querySelector(".headerMobile");
let lastScroll = 0;

const throttle = (func, time = 100) => {
  let lastTime = 0;
  return () => {
    const now = new Date();
    if (now - lastTime >= time) {
      func();
      time = now;
    }
  };
};

const validateHeader = () => {
  const windowY = window.scrollY;
  const windowH = window.innerHeight;
  if (windowY > windowH) {
    // We passed the first section, set a toggable class
    header.classList.add("is-fixed");
    // Determine is we ready to animate
    if (windowY > windowH + 40) {
      header.classList.add("can-animate");
      if (windowY < lastScroll) {
        // Determine if we scrolling up
        header.classList.add("scroll-up");
      } else {
        header.classList.remove("scroll-up");
      }
    } else {
      header.classList.remove("scroll-up");
    }
  } else {
    header.classList.remove("is-fixed", "can-animate");
  }
  lastScroll = windowY;
};

window.addEventListener("scroll", throttle(validateHeader, 100));
</script>